schema {
  query: Query
  # mutation: Mutation
}

# type Mutation
# type Query {
#   popularTitles(
#     country: String
#     after: String
#     offset: Boolean
#     after: String
#     # filter: $popularTitlesFilter
#     sortBy: String # actuall an enum?
#   ): # sortRandomSeed: $sortRandomSeed
#   PopularTitlesConnection!
# }

# type PopularTitlesConnection {
#   "A list of edges."
#   edges: [PopularTitlesEdge]

#   "A list of nodes."
#   nodes: [UserContentEdit]

#   "Information to aid in pagination."
#   pageInfo: PageInfo!

#   "Identifies the total count of items in the connection."
#   totalCount: Int!
# }

type PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean
  hasNextPage: Boolean
  # __typename: String
}

type User {
  id: String
  username: String
}

# type WatchNowOffer {
#   id: String
#   standardWebURL: String
#   retailPrice: String
#   retailPriceValue: Float
#   lastChangeRetailPriceValue: String
#   currency: String
#   presentationType: String
#   monetizationType: String
#   availableTo: String
#   # __typename: String
#   package: Package
# }

# type Offers {
#   id: String
#   standardWebURL: String
#   deeplinkURL(platform: Platform): String
#   retailPrice: String
#   retailPriceValue: Float
#   lastChangeRetailPriceValue: Float
#   currency: String
#   presentationType: String
#   monetizationType: String
#   availableTo: String
#   # __typename: String
#   package: Package
# }

# type Genres {
#   translation: String
#   # __typename: String
# }

# type Credits {
#   name: String
#   personId: Int
#   # __typename: String
# }

# type Scoring {
#   imdbVotes: Int
#   imdbScore: Float
#   tmdbPopularity: Float
#   tmdbScore: Float
#   # __typename: String
# }

# type Content {
#   title: String
#   fullPath: String
#   posterUrl: String
#   # __typename: String
#   isReleased: Boolean
#   runtime: Int
#   genres: [Genres]
#   credits: [Credits]
#   backdrops: [String]
#   dailymotionClips: [String]
#   scoring: Scoring
#   externalIds: externalIds
# }

# type Node {
#   id: String
#   objectId: Int
#   objectType: String
#   likelistEntry: String
#   dislikelistEntry: String
#   watchlistEntry: String
#   seenlistEntry: String
#   # __typename: String
#   # watchNowOffer: WatchNowOffer
#   # offers: [Offers]
#   offers(country: String, platform: Platform!): [Offers]
#   content(country: String, language: Language!): Content!
# }

# type externalIds {
#   tmdbId: String
#   imdbId: String
# }

# interface PopularTitlesEdge {
#   cursor: String
#   # __typename: String
#   node: Node
# }

# type PopularTitles {
#   # sponsoredAd: String
#   totalCount: Int
#   # __typename: String
#   pageInfo: PageInfo
#   edges: [PopularTitlesEdge]
# }

# type Query {
#   popularTitles(
#     country: Country!
#     sortBy: PopularTitlesSorting!
#     # language: Language
#     after: String!
#     first: Int!
#     offset: Int
#     # filter: $popularTitlesFilter
#   ): PopularTitles!
# }

# enum PopularTitlesSorting {
#   ALPHABETICAL
#   POPULAR
# }

# enum Country {
#   NL
#   BE
# }

# enum Language {
#   nl
#   be
#   en
# }

# enum Platform {
#   IOS
#   TVOS
#   ANDROID
#   WEB
# }


# type AutogeneratedMainType {
#   data: Data
# }